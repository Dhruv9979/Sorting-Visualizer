{"version":3,"sources":["sortingAlgorithms/mergeSort.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/quickSort.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["mergeSortAnimations","arr","animations","length","animationsArr","slice","mergeSort","mainArr","startIdx","endIdx","middle","Math","floor","mainArray","middleIdx","auxiliaryArray","k","i","j","push","mergeArrays","bubbleSortAnimations","noSwaps","swap","bubbleSort","idx1","idx2","temp","quickSortAnimations","array","arrayOne","arrayTwo","arraysAreEqual","sort","a","b","quickSort","leftIndex","rightIndex","pivot","start","end","pivotValue","pivotIdx","left","right","pivotIndex","SortingVisualizer","props","state","this","resetArray","randomIntFromInterval","setState","arrayBars","document","getElementsByClassName","arrayLength","style","backgroundColor","console","log","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","makeAllBarsGreen","newHeight","height","pivotBar","oldPosition","newPosition","oldBarStyle","newBarStyle","dummyAnimations","currentPosition","javaScriptSortedArray","mergeSortedArray","key","className","id","type","min","max","background","cursor","onClick","href","aria-hidden","map","value","idx","React","Component","ceil","random","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.856069f4.chunk.js","sourcesContent":["export function mergeSortAnimations(arr) {\r\n    const animations = [];\r\n    if (arr.length <= 1) return arr;\r\n    const animationsArr = arr.slice();\r\n    mergeSort(arr, 0, arr.length - 1, animationsArr , animations);\r\n    return animations\r\n}\r\n\r\nfunction mergeSort(mainArr, startIdx, endIdx, animationsArr, animations) {\r\n    if (startIdx === endIdx) return;\r\n\tlet middle = Math.floor((startIdx + endIdx) / 2);\r\n\tmergeSort(animationsArr, startIdx, middle, mainArr, animations);\r\n\tmergeSort(animationsArr, middle + 1, endIdx, mainArr, animations);\r\n\treturn mergeArrays(mainArr, startIdx, middle, endIdx, animationsArr, animations);\r\n}\r\n\r\nfunction mergeArrays(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations) {\r\n\tlet k = startIdx;\r\n\tlet i = startIdx;\r\n\tlet j = middleIdx + 1;\r\n\twhile (i <= middleIdx && j <= endIdx) {\r\n\t\tanimations.push([i, j]);\r\n\t\tanimations.push([i, j]);\r\n\t\tif (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n\t\t\tanimations.push([k, auxiliaryArray[i]]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t\t} else {\r\n\t\t\tanimations.push([k, auxiliaryArray[j]]);\r\n\t\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t\t}\r\n\t}\r\n\twhile (i <= middleIdx) {\r\n\t\tanimations.push([i, i]);\r\n\t\tanimations.push([i, i]);\r\n\t\tanimations.push([k, auxiliaryArray[i]]);\r\n\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t}\r\n\twhile (j <= endIdx) {\r\n\t\tanimations.push([j, j]);\r\n\t\tanimations.push([j, j]);\r\n\t\tanimations.push([k, auxiliaryArray[j]]);\r\n\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t}\r\n}","export function bubbleSortAnimations(arr) {\r\n\tconst animations = [];\r\n\tif (arr.length <= 1) return arr;\r\n\tconst auxiliaryArray = arr.slice();\r\n\tbubbleSort(animations, auxiliaryArray);\r\n\treturn animations;\r\n}\r\n\r\nfunction bubbleSort(animations, auxiliaryArray) {\r\n\tvar noSwaps;\r\n\tfor (var i = auxiliaryArray.length; i > 0; i--) {\r\n\t\tnoSwaps = true;\r\n\t\tfor (var j = 0; j < i - 1; j++) {\r\n\t\t\tif (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\r\n\t\t\t\tswap(auxiliaryArray, j, j + 1);\r\n\t\t\t\tanimations.push([j, j + 1]);\r\n\t\t\t\tnoSwaps = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (noSwaps) break;\r\n\t}\r\n\treturn auxiliaryArray;\r\n}\r\n\r\nfunction swap(arr, idx1, idx2) {\r\n\tvar temp = arr[idx1];\r\n\tarr[idx1] = arr[idx2];\r\n\tarr[idx2] = temp;\r\n}\r\n","export function quickSortAnimations(array) {\r\n\tconst animations = [];\r\n\tif (array.length <= 1) return array;\r\n\tconst javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n\tif (arraysAreEqual(javaScriptSortedArray, array)) return animations;\r\n\tconst auxiliaryArray = array.slice();\r\n\tquickSort(animations, auxiliaryArray, 0, auxiliaryArray.length - 1);\r\n\treturn animations;\r\n}\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n\tif (arrayOne.length !== arrayTwo.length) return false;\r\n\tfor (let i = 0; i < arrayOne.length; i++) {\r\n\t\tif (arrayOne[i] !== arrayTwo[i]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction swap(animations, arr, leftIndex, rightIndex) {\r\n\tvar temp = arr[leftIndex];\r\n\tarr[leftIndex] = arr[rightIndex];\r\n\tarr[rightIndex] = temp;\r\n\r\n\tanimations.push([leftIndex, rightIndex]);\r\n}\r\nexport function pivot(arr, start = 0, end = arr.length - 1, animations) {\r\n\tvar pivotValue = arr[start];\r\n\tvar pivotIdx = start;\r\n\tfor (let i = start + 1; i <= end; i++) {\r\n\t\tif (pivotValue > arr[i]) {\r\n\t\t\tpivotIdx++;\r\n\t\t\tswap(animations, arr, i, pivotIdx);\r\n\t\t}\r\n\t}\r\n\tswap(animations, arr, start, pivotIdx);\r\n\treturn pivotIdx;\r\n}\r\n\r\nexport function quickSort(animations, arr, left, right) {\r\n\tif (left < right) {\r\n\t\tlet pivotIndex = pivot(arr, left, right, animations);\r\n\t\t//Left Side\r\n\t\tquickSort(animations, arr, left, pivotIndex - 1);\r\n\t\t//Right Side\r\n\t\tquickSort(animations, arr, pivotIndex + 1, right);\r\n\t}\r\n\treturn arr;\r\n}\r\n","import React from \"react\";\r\nimport { mergeSortAnimations } from \"../sortingAlgorithms/mergeSort.js\";\r\nimport { bubbleSortAnimations } from \"../sortingAlgorithms/bubbleSort.js\";\r\nimport { quickSortAnimations, quickSort, pivot } from \"../sortingAlgorithms/quickSort.js\";\r\nimport \"./SortingVisualizer.css\";\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 0.1;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nconst NUMBER_OF_ARRAY_BARS = 350;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        // 250, 150, 50, 350, 300, 400, 100, 200, 450\r\n        const array = [];\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, 600));\r\n        }\r\n\r\n        this.setState({ array });\r\n\t\tconst arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\t\tvar arrayLength = arrayBars.length;\r\n\t\tfor (let j = 0; j < arrayLength; j++) {\r\n\t\t\tvar jBarStyle = arrayBars[j].style;\r\n\t\t\tjBarStyle.backgroundColor = PRIMARY_COLOR;\r\n\t\t}\r\n    }\r\n\r\n    makeAllBarsGreen() {\r\n        console.log(\"Sorted\");\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        var arrayLength = arrayBars.length;\r\n        for (let j = 0; j < arrayLength; j++) {\r\n            var jBarStyle = arrayBars[j].style;\r\n            jBarStyle.backgroundColor = \"limegreen\";\r\n        }\r\n    }\r\n\r\n    mergeSort() {\r\n        const animations = mergeSortAnimations(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                    if(i === animations.length - 1){\r\n                        this.makeAllBarsGreen();\r\n                    }\r\n                }, i * ANIMATION_SPEED_MS);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                    if (i === animations.length - 1) {\r\n                        this.makeAllBarsGreen();\r\n                    }\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    quickSort() {\r\n        const array = this.state.array;\r\n        const animations = quickSortAnimations(array);\r\n        console.log(animations);\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            setTimeout(() => {\r\n                var [oldPosition, newPosition] = animations[i];\r\n\r\n                var oldBarStyle = arrayBars[oldPosition].style;\r\n                var newBarStyle = arrayBars[newPosition].style;\r\n                var pivotIndex;\r\n                var pivotBar;\r\n                const dummyAnimations = [];\r\n                if (array.length > 1) {\r\n                    if( 0 < array.length) {\r\n                        pivotIndex = pivot(array, 0, array.length - 1, dummyAnimations);\r\n                        pivotBar = arrayBars[pivotIndex].style;\r\n                        pivotBar.backgroundColor = \"purple\";\r\n\t\t\t\t\t\t//Left Side\r\n\t\t\t\t\t\tquickSort(dummyAnimations, array, 0, pivotIndex - 1);\r\n\t\t\t\t\t\t//Right Side\r\n\t\t\t\t\t\tquickSort(dummyAnimations, array, 0, array.length - 1);\r\n                    }\r\n                }\r\n\r\n                oldBarStyle.height = `${this.state.array[oldPosition]}px`;\r\n                newBarStyle.height = `${this.state.array[newPosition]}px`;\r\n                \r\n                oldBarStyle.backgroundColor = \"yellow\";\r\n                newBarStyle.backgroundColor = \"red\";\r\n                pivotBar.backgroundColor = \"purple\";\r\n\r\n                var currentPosition = oldPosition;\r\n                for (let j = 0; j < currentPosition; j++) {\r\n                    var jBarStyle = arrayBars[j].style;\r\n                    jBarStyle.backgroundColor = \"green\";\r\n                    pivotBar.backgroundColor = \"purple\";\r\n                }\r\n                if (i === animations.length - 1) {\r\n                    this.makeAllBarsGreen();\r\n                }\r\n            }, i * ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n\r\n    async bubbleSort() {\r\n        const array = this.state.array;\r\n        const animations = bubbleSortAnimations(array);\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for(let i = 0; i < animations.length; i++){\r\n            setTimeout(() => {\r\n\t\t\t\tvar [oldPosition, newPosition] = animations[i];\r\n\t\t\t\tvar oldBarStyle = arrayBars[oldPosition].style;\r\n\t\t\t\tvar newBarStyle = arrayBars[newPosition].style;\r\n\r\n\t\t\t\tvar temp = this.state.array[oldPosition];\r\n\t\t\t\tthis.state.array[oldPosition] = this.state.array[newPosition];\r\n\t\t\t\tthis.state.array[newPosition] = temp;\r\n\r\n\t\t\t\toldBarStyle.height = `${this.state.array[oldPosition]}px`;\r\n\t\t\t\tnewBarStyle.height = `${this.state.array[newPosition]}px`;\r\n\r\n\t\t\t\toldBarStyle.backgroundColor = \"red\";\r\n\t\t\t\tnewBarStyle.backgroundColor = \"green\";\r\n\r\n\t\t\t\tvar currentPosition = oldPosition;\r\n\t\t\t\tfor (let j = 0; j < currentPosition; j++) {\r\n\t\t\t\t\tvar jBarStyle = arrayBars[j].style;\r\n\t\t\t\t\tjBarStyle.backgroundColor = \"red\";\r\n\t\t\t\t}\r\n\t\t\t\tif (i === animations.length - 1) {\r\n\t\t\t\t\tthis.makeAllBarsGreen();\r\n\t\t\t\t}\r\n\t\t\t}, i * ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n\r\n    testSortingAlgorithms() {\r\n        for (let i = 0; i < 1; i++) {\r\n            const array = [];\r\n            const length = randomIntFromInterval(1, 1000);\r\n            for (let i = 0; i < length; i++) {\r\n                array.push(randomIntFromInterval(-1000, 1000));\r\n            }\r\n            const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n            const mergeSortedArray = quickSortAnimations(array.slice());\r\n            console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return [\r\n\t\t\t<header key={\"Navigation\"}>\r\n\t\t\t\t<section className=\"logo\">\r\n\t\t\t\t\t<h1>Sorting Algorithms</h1>\r\n\t\t\t\t</section>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul className=\"items\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"changeSize\"\r\n\t\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\t\tstyle={{ background: \"white\", cursor: \"cursor\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a onClick={() => this.resetArray()} href=\"#\">\r\n\t\t\t\t\t\t\t\tNew Array\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a onClick={() => this.mergeSort()} href=\"#\">\r\n\t\t\t\t\t\t\t\tMerge Sort\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a onClick={() => this.quickSort()} href=\"#\">\r\n\t\t\t\t\t\t\t\tQuick Sort\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a onClick={() => this.bubbleSort()} href=\"#\">\r\n\t\t\t\t\t\t\t\tBubble Sort\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"menu-toggle\">\r\n\t\t\t\t\t<i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t</header>,\r\n\t\t\t<div className=\"array-container\" key=\"Array\">\r\n\t\t\t\t{array.map((value, idx) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"array-bar\"\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: PRIMARY_COLOR,\r\n\t\t\t\t\t\t\theight: `${value}px`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t))}\r\n\t\t\t</div>,\r\n\t\t];\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    min = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n    if (arrayOne.length !== arrayTwo.length) return false;\r\n    for (let i = 0; i < arrayOne.length; i++) {\r\n        if (arrayOne[i] !== arrayTwo[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}